apiVersion: apps/v1
kind: Deployment
metadata:
  name: oauth2proxy
  namespace: metal
  labels:
    app: oauth2prox
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oauth2proxy
  template:
    metadata:
      labels:
        app: oauth2proxy
    spec:
      containers:
        - name: redis
          image: redis:latest
          ports:
            - containerPort: 6379
              name: redis

        - name: oauth2proxy
          image: bitnami/oauth2-proxy
          args:
            - "--http-address=0.0.0.0:4180"
            - "--session-store-type=redis"
            - "--redis-connection-url=redis://localhost:6379"
            - "--cookie-samesite=strict"
            - "--skip-provider-button=false"
          env:
            - name: OAUTH2_PROXY_HTTP_ADDRESS
              value: "0.0.0.0:4180"
            - name: OAUTH2_PROXY_COOKIE_SECRET
              value: "oqinaroshte9tczknam-5zs2pv3xawytbmc5w7spx7w="
            - name: OAUTH2_PROXY_EMAIL_DOMAINS
              value: "*"

            - name: OAUTH2_PROXY_COOKIE_SECURE
              value: "true"
            - name: OAUTH2_PROXY_UPSTREAMS
              value: "http://metal.metal.svc.cluster.local:8080"
            - name: OAUTH2_PROXY_COOKIE_DOMAINS
              value: ".anykey.pl"
            - name: OAUTH2_PROXY_WHITELIST_DOMAINS
              value: ".anykey.pl"
            
            # Keycloak provider configuration
            - name: OAUTH2_PROXY_CLIENT_SECRET
              value: "cFdKXHNRZvWMdxYsuLsvpIB8taxTMntw"
            - name: OAUTH2_PROXY_CLIENT_ID
              value: "oauth2-proxy"
            - name: OAUTH2_PROXY_REDIRECT_URL
              value: "https://proxy.anykey.pl/oauth2/callback"
            
            # OIDC configuration
            - name: OAUTH2_PROXY_OIDC_ISSUER_URL
              value: "https://identity.anykey.pl/realms/oauth2-proxy"
            - name: OAUTH2_PROXY_PROVIDER
              value: "oidc"
            - name: OAUTH2_PROXY_PROVIDER_DISPLAY_NAME
              value: "keycloak"            

            # Redis configuration
            - name: OAUTH2_PROXY_SESSION_STORE_TYPE
              value: "redis"
            - name: OAUTH2_PROXY_SESSION_STORE_REDIS_URL
              value: "localhost:6379"
          ports:
            - containerPort: 4180
              name: oauth2-proxy

---
apiVersion: v1
kind: Service
metadata:
  name: oauth2proxy
  namespace: metal
  labels:
    app: oauth2proxy
spec:
  selector:
    app: oauth2proxy
  ports:
    - protocol: TCP
      port: 4180 
      targetPort: 4180
      name: oauth2-proxy
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: oauth2proxy
  namespace: metal
  annotations:
    "traefik.ingress.kubernetes.io/router.entrypoints": websecure
spec:
  rules:
    - host: "proxy.anykey.pl"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: oauth2proxy
                port:
                  number: 4180 
