# github.yml 
name: building_docker_github
description: ''

inputs:

  # Required 
  auth_token:
    description: "Authentication token for access."
    required: true

  dockerfile_context:
    description: "Build context directory."
    required: false
    default: './'

  dockerfile_path:
    description: "Path to the Dockerfile."
    required: false
    default: './Dockerfile'

  # Optional
  docker_option_buildkit:
    description: "Enable Docker BuildKit."
    required: false
    default: 'true'

  docker_build_arguments:
    description: "Custom build arguments."
    required: false

  docker_build_tag_current:
    description: "Tag for the Docker image."
    required: false

  docker_build_tag_latest:
    description: "Tag for the Docker image."
    required: false

runs:
  using: composite 
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4
             
    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: 'ghcr.io' 
        username: ${{ github.actor }}
        password: ${{ inputs.auth_token }}

    - name: Build and push Docker image
      shell: bash
      working-directory: "${{ inputs.dockerfile_context }}"
      env:
        DOCKER_BUILDKIT: 1
      run: |

        echo '${{ inputs.docker_build_tag_current }}' 
        echo '${{ inputs.docker_build_tag_latest }}' 
        echo '${{ inputs.docker_build_arguments }}' 

        # build
        docker_build_arguments=$(echo ${{ inputs.docker_build_arguments }})
        dockerfile_path=$(echo ${{ inputs.dockerfile_path }}) 

        # tags
        docker_build_tag_current=$(echo ${{ inputs.docker_build_tag_current }})
        docker_build_tag_latest=$(echo ${{ inputs.docker_build_tag_latest }})

        # build 
        DOCKER_COMMAND="$(
          echo \
            docker buildx build \
              ${docker_build_arguments} \
              --tag dummy \
              --file ${dockerfile_path} \
              .
        )";

        eval "${DOCKER_COMMAND}"

        # current 
        docker tag dummy "${{ inputs.docker_build_tag_current }}";
        docker push "${{ inputs.docker_build_tag_current }}";

        # latest 
        docker tag dummy "${{ inputs.docker_build_tag_latest }}";
        docker push "${{ inputs.docker_build_tag_latest }}";
